openapi: "3.1.0"
info:
  title: "example_2025 API"
  description: "example_2025 API"
  version: "1.0.0"
servers:
- url: "https://example_2025"
paths:
  /api/clients/login:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestModel"
        required: true
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "User with this email and password doesn't exist"
                Example#2:
                  description: ""
                  value:
                    status: "User with this email and password doesn't exist"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponseModel"
  /api/clients/profile:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema: {}
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "You are not company"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Company not found"
  /api/clients/register:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequestModel"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "User with this email already exists"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponseModel"
  /api/companies/login:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestModel"
        required: true
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "User with this email and password doesn't exist"
                Example#2:
                  description: ""
                  value:
                    status: "User with this email and password doesn't exist"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponseModel"
  /api/companies/profile:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema: {}
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "You are not company"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Company not found"
  /api/companies/register:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterCompanyRequestModel"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "User with this email already exists"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponseModel"
  /api/company:
    get:
      description: ""
      parameters:
      - name: "limit"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "offset"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "You are not company"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Wrong offset"
                Example#2:
                  description: ""
                  value:
                    status: "Wrong limit"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetOfferResponseModel"
  /api/company/{companyId}/image:
    get:
      description: ""
      parameters:
      - name: "companyId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Something went wrong"
                Example#2:
                  description: ""
                  value:
                    status: "bad companyId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Picture not found"
        "200":
          description: "OK"
          content:
            image/jpeg:
              schema:
                type: "string"
                format: "byte"
  /api/company/image:
    post:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "You are not company"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Something went wrong"
  /api/company/scanQr:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOfferByQrRequestModel"
        required: true
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "You are not company"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Qr is not found or expired"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "offer is null"
                Example#2:
                  description: ""
                  value:
                    status: "offer is null"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetOfferByQrResponseModel"
  /api/offers/client:
    get:
      description: ""
      parameters:
      - name: "limit"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "offset"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "You are not client"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Wrong offset"
                Example#2:
                  description: ""
                  value:
                    status: "Wrong limit"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetOfferResponseModel"
  /api/offers/client/generateQr:
    post:
      description: ""
      parameters:
      - name: "offerId"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "You are not client"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Wrong offer id provided"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Offer not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenerateQRPayloadResponseModel"
  /api/offers/create:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRequestModel"
        required: true
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Authorized as client"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    status: "Company not found"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: "object"
  /api/ping:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
components:
  schemas:
    LoginRequestModel:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "email"
      - "password"
    ErrorResponse:
      type: "object"
      properties:
        status:
          type: "string"
      required:
      - "status"
    LoginResponseModel:
      type: "object"
      properties:
        token:
          type: "string"
      required:
      - "token"
    GetClientProfileResponseModel:
      type: "object"
      properties:
        id:
          type: "string"
        first_name:
          type: "string"
        last_name:
          type: "string"
        email:
          type: "string"
      required:
      - "id"
      - "first_name"
      - "last_name"
      - "email"
    RegisterRequestModel:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "firstName"
      - "lastName"
      - "email"
      - "password"
    GetCompanyProfileResponseModel:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        email:
          type: "string"
      required:
      - "id"
      - "name"
      - "email"
    RegisterCompanyRequestModel:
      type: "object"
      properties:
        name:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "name"
      - "email"
      - "password"
    GetOfferResponseModel:
      type: "object"
      properties:
        id:
          type: "string"
        company_id:
          type: "string"
        company_name:
          type: "string"
        title:
          type: "string"
        description:
          type: "string"
        discount:
          type: "number"
          format: "double"
        start_date:
          type: "string"
        end_date:
          type: "string"
      required:
      - "id"
      - "company_id"
      - "company_name"
      - "title"
      - "description"
      - "discount"
      - "start_date"
      - "end_date"
    GetOfferByQrRequestModel:
      type: "object"
      properties:
        payload:
          type: "string"
      required:
      - "payload"
    GetOfferByQrResponseModel:
      type: "object"
      properties:
        client_first_name:
          type: "string"
        client_last_name:
          type: "string"
        offer_title:
          type: "string"
        offer_discount:
          type: "number"
          format: "double"
      required:
      - "client_first_name"
      - "client_last_name"
      - "offer_title"
      - "offer_discount"
    GenerateQRPayloadResponseModel:
      type: "object"
      properties:
        payload:
          type: "string"
      required:
      - "payload"
    CreateRequestModel:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
        discount:
          type: "number"
          format: "double"
        startDate:
          type: "string"
        endDate:
          type: "string"
      required:
      - "title"
      - "description"
      - "discount"
      - "startDate"
      - "endDate"