x-common: &env-common
  environment:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: Vn0i4S2eUYalG9JY98cG
    POSTGRES_URL: "jdbc:postgresql://postgres:5432/prod"
    POSTGRES_DB: prod
    REDIS_HOST: redis
    REDIS_PORT: 6379
    S3_ACCESS_KEY: "minio"
    S3_SECRET_KEY: "miniosecret"
    S3_URL: "http://minio:9000"
    MINIO_DEFAULT_BUCKETS: "bucket"


services:
  app:
    image: gitlab.prodcontest.ru:5050/team-10/backend
    restart: unless-stopped
    networks:
      - main
    ports:
      - "80:8080"
    healthcheck:
      test: curl --fail http://localhost:8080/api/ping || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      postgres:
        condition: service_healthy
    <<: *env-common
  postgres:
    image: postgres:17.3
    restart: unless-stopped
    networks:
      - main
    ports:
      - "8001:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
    <<: *env-common
  redis:
    image: redis:7.4
    restart: unless-stopped
    networks:
      - main
  minio:
    hostname: minio
    image: bitnami/minio:2025
    <<: *env-common
    volumes:
      - 'minio_data:/bitnami/minio/data'


volumes:
  minio_data:
    driver: local
  pg_data:

networks:
  main:
    driver: bridge
